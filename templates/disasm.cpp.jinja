£ import 'templates/common.jinja' as common

#include <stdio.h>
#include "arm64-decode.cpp"

using namespace captive::arch::aarch64;

int disasm(uint32_t ir) {

  captive::arch::aarch64::aarch64_decode_a64 decoder;
  decoder.isa_mode = aarch64_decode_a64::aarch64_a64;
  uint64_t pc = 0x0000000000000000;
  uint32_t* ptr = &ir;
  bool is_valid = decoder.decode(0, pc, ptr);

£ for inst in instructions|sort(attribute="mnemonic")
  £ for enc in inst.encodings
  if(decoder.opcode == aarch64_decode_a64::{{common.opcode(enc)}})
  {
    printf("{{inst.mnemonic|lower}}\n");
  }
  £ endfor
£ endfor

  return 0;
}
